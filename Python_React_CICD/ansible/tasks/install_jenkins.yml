- name: Install required dependencies (fontconfig, Java 21 OpenJDK)
  ansible.builtin.dnf:
    name:
      - fontconfig
      - java-21-openjdk-devel
    state: present

- name: Create jenkins user and group if not exists
  ansible.builtin.group:
    name: "{{ jenkins_group }}"
    state: present

- ansible.builtin.user:
    name: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    system: yes
    create_home: no
    shell: /sbin/nologin




- name: Stop Jenkins service if running
  ansible.builtin.service:
    name: jenkins
    state: stopped
  ignore_errors: true

- name: Remove existing Jenkins systemd service file if exists
  ansible.builtin.file:
    path: /etc/systemd/system/jenkins.service
    state: absent
  ignore_errors: true

- name: Remove existing Jenkins home
  ansible.builtin.file:
    path: "{{ jenkins_home }}"
    state: absent
  ignore_errors: true



- name: Create Jenkins home directory
  ansible.builtin.file:
    path: "{{ jenkins_home }}"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: '0755'

- name: Deploy manual jenkins.service file
  ansible.builtin.template:
    src: ../jenkins/jenkins.service.j2
    dest: /etc/systemd/system/jenkins.service
    owner: root
    group: root
    mode: '0644'

- name: Download jenkins.war manually via get_url if not present or changed
  ansible.builtin.get_url:
    url: "{{ jenkins_war_url }}"
    dest: "{{ jenkins_home }}/jenkins.war"
    mode: '0644'
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    force: yes



- name: Reload systemd daemon after service file change
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start Jenkins service
  ansible.builtin.service:
    name: jenkins
    state: restarted
    enabled: yes

- name: Open port with firewalld (RedHat/CentOS/Fedora)
  ansible.posix.firewalld:
    zone: public
    port: "{{jenkins_http_port}}/tcp"
    state: enabled
    permanent: yes
    immediate: yes

- name: Wait for Jenkins to be ready
  ansible.builtin.uri:
    url: "http://localhost:{{ jenkins_http_port }}/login"
    status_code: 200
    validate_certs: false
  register: _result
  until: _result.status == 200
  retries: 10
  delay: 15
  changed_when: false



- name: Load plugin list from file
  ansible.builtin.set_fact:
    jenkins_plugins: "{{ lookup('file', '../jenkins/plugins.txt').splitlines() }}"

- name: Read initial admin password
  ansible.builtin.command: cat /opt/jenkins/secrets/initialAdminPassword
  register: initial_password_command_output

- name: Set password as a fact
  ansible.builtin.set_fact:
    jenkins_initial_password: "{{ initial_password_command_output.stdout | trim }}"

- name: Install Jenkins plugins from list
  community.general.jenkins_plugin:
    name: "{{ item }}"
    state: present
    url: http://192.168.56.110:5002
    url_username: admin 
    url_password: "{{ jenkins_initial_password }}" 
  loop: "{{ jenkins_plugins }}"



- name: Remove existing Jenkins casc
  ansible.builtin.file:
    path: "{{ jenkins_casc_config_dir }}"
    state: absent
  ignore_errors: true

- name: Ensure Jenkins JCasC configuration directory exists
  ansible.builtin.file:
    path: "{{ jenkins_casc_config_dir }}"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: '0755'

- name: Copy JCasC configuration file to remote host
  ansible.builtin.copy:
    src: "../jenkins/jenkins.yaml"
    dest: "{{ jenkins_casc_config_dir }}/jenkins.yaml"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: '0644'

- name: Deploy manual jenkins.service file with JCasC 
  ansible.builtin.template:
    src: ../jenkins/jenkins.service.jcasc.j2
    dest: /etc/systemd/system/jenkins.service
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd daemon after service file change
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start Jenkins service
  ansible.builtin.service:
    name: jenkins
    state: started
    enabled: yes
  register: jenkins_service
  until: jenkins_service is succeeded
  retries: 3
  delay: 15

- name: Restart Jenkins to apply JCasC configuration
  ansible.builtin.service:
    name: jenkins
    state: restarted
    enabled: yes

